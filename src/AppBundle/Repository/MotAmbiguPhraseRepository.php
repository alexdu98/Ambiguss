<?php

namespace AppBundle\Repository;

/**
 * MotAmbiguPhraseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MotAmbiguPhraseRepository extends \Doctrine\ORM\EntityRepository
{
	public function findByIdPhrase($idPhrase){
		return $this->createQueryBuilder('pma')
			->innerJoin("pma.motAmbigu", "ma", "WITH", "pma.motAmbigu = ma.id")->addSelect("ma")
			->innerJoin("ma.gloses", "g")->addSelect("g")
			->where("pma.phrase = :phrase")->setParameter("phrase", $idPhrase)
			->getQuery()->getResult();
	}

	/**
	 * Retourne un tableau de tableau avec un champ correspondant Ã  l'id d'une phrase et existante depuis plus de $dureeAv
	 * @param $dureeAvantJouabiliteSecondes
	 *
	 * @return array
	 */
	public function findAllIdPhrases($dureeAvantJouabiliteSecondes)
	{
		$date = new \DateTime();
		$dateMin = $date->setTimestamp($date->getTimestamp() - $dureeAvantJouabiliteSecondes);

		return $this->createQueryBuilder('pma')->select('identity(pma.phrase) id')
			->leftJoin('pma.reponses', 'r', "WITH", "pma.id = r.motAmbiguPhrase")
			->join('pma.phrase', 'p', "WITH", "pma.phrase = p.id")
			->where('p.dateCreation < :dateMin')->setParameter('dateMin', $dateMin->format('Y-m-d H:i:s'))
			->andWhere('p.visible = 1')
			->groupBy('pma.phrase')
			->getQuery()->getArrayResult();
	}

}
