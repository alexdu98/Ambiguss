{% extends 'base.html.twig' %}

{% block title %}Édition de phrase{% endblock %}
{% block titre %}Édition d'une phrase{% endblock %}

{% block contenu %}
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-10 col-md-offset-1 well">
            {% if newPhrase is not null %}
                {{ include('@App/Phrase/displayPhrase.html.twig', {'add': false, 'modo': true, 'phraseDisplay' : newPhrase}) }}
            {% endif %}

            {% for label, messages in app.flashes(['danger', 'success', 'info', 'warning']) %}
                {% for message in messages %}
                    <div class="alert alert-{{ label }} alert-dismissible" role="alert">
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                        {{ message|raw }}
                    </div>
                {% endfor %}
            {% endfor %}

            <div class="row">
                <div class="col-xs-12 col-sm-3 col-md-3">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Créateur</div>
                            <input type="text" class="form-control" value="{{ phrase.auteur.username }}" disabled>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-3 col-md-3">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Création le</div>
                            <input type="text" class="form-control" value="{{ phrase.dateCreation|date('d/m/Y H:i') }}" disabled>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-3 col-md-3">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Modificateur</div>
                            <input type="text" class="form-control" value="{{ phrase.modificateur.username|default('') }}" disabled>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 col-sm-3 col-md-3">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">Modification le</div>
                            <input type="text" class="form-control" value="{{ phrase.dateModification is empty ? '' : phrase.dateModification|date('d/m/Y H:i') }}" disabled>
                        </div>
                    </div>
                </div>
            </div>

            {{ form_start(form , {'attr': {'id': 'phrase-editor-form'}, 'form-type' : 'horizontal'}) }}

            {{ form_errors(form) }}

            {{ include('AppBundle:Phrase:editor.html.twig', {'form' : form, 'phraseOri' : phraseOri }) }}

            <hr>

            <div class="row">
                <div class="col-md-3">
                    {{ form_label(form.signale) }} : {{ form_widget(form.signale) }}
                </div>
                <div class="col-md-3">
                    {{ form_label(form.visible) }} : {{ form_widget(form.visible) }}
                </div>
            </div>

            <div class="form-group text-center">
                <a id="toggleSignalements" class="btn btn-primary">Voir/cacher les signalements en cours</a>
            </div>
            <div class="form-group">
                <div id="signalements" hidden>
                    {% for signalement in signalements %}
                        {{ include('@App/Signalement/edit.html.twig', {categorie: attribute(signalement.categorieSignalement, 'nom'), id: signalement.id, description:
                            signalement.description, lien_profil: path('fos_user_profile_show', {id: signalement.auteur.id}), username: signalement.auteur.username, date: signalement.dateCreation|date('d/m/Y h:i') }) }}
                    {% else %}
                        <span class="text-danger">Aucun signalement en cours</span>
                    {% endfor %}
                </div>
            </div>

            {{ form_end(form) }}
        </div>
    </div>
    <button type="button" class="pull-right infobulle" data-toggle="modal" data-target="#modal" id="helpEditPhraseModal">
        <img src="{{ asset('images/infobulle.png') }}">
    </button>
{% endblock %}

{% block js %}
    <script src="{{ asset('vendor/rangyinputs/rangyinputs-jquery.js') }}"></script>
    <script src="{{ asset('js/editeur.js') }}"></script>
    <script src="{{ asset('js/addGlose.js') }}"></script>
    <script>
        var nbGlosesFree = {{ nbGlosesFree }};
        var costCreateGloseByGlosesOfMotAmbigu = {{ costCreateGloseByGlosesOfMotAmbigu }};
        var gloseAddForm = "{{ form(addGloseForm)|e('js') }}";
        var reponsesOri = {{ reponsesOri|json_encode|raw }};
        $(document).ready(function ()
        {
            $("#toggleSignalements").click(function () {
                $("#signalements").toggle("slow");
            });

            // Ajout de l'eventlistener valide
            $('.signalement').click(function (event) {
                event.preventDefault();
                var bouton = $(this);
                // On affiche l'image laoding en attendant la réponse
                $(this).after('<img src="' + urlImageLoading + '" id="loading">');
                $.post(Routing.generate('modo_signalement_edit', {id: $(this).data('id')}),
                    {
                        verdict: $(this).data('verdict'),
                        token: '{{ csrf_token('signalement_vote') }}'
                    }
                    , function
                        (data) {
                        if (data.succes) {
                            bouton.closest('.panel').remove();
                        }
                        else {
                            bouton.closest('.panel').append('<span class="text-danger">Erreur (' + data.message + ')</span>')
                        }
                    })
                    .fail(function () {
                        $(this).after('<span class="text-danger">Erreur</span>');
                    })
                    .always(function () {
                        $('#loading').remove();
                    });
            });

            // Au click sur le bouton, exécute la fonction
            $('#helpEditPhraseModal').click(helpEditPhraseModal);
            function helpEditPhraseModal(event) {
                // Si les cookies Ambiguss sont activés
                if (cookieIsActivated('ambiguss')) {
                    // Place le cookie pendant X jours
                    $.cookie('helpEditModoPhraseV1', 'true', {expires: {{ ttl_cookie_helper }}, path: '/'});
                }
                setModalSize('modal-lg');
                setModalTitle('Informations sur l\'édition de phrase');
                setModalBody('{{ include('@App/InfosModal/editPhraseModo.html.twig')|e('js') }}');
            }

            // Affiche automatiquement la modal si le visiteur n'a pas le cookie comme quoi il a déjà vu les infos
            {% if not app.request.cookies.has('helpEditModoPhraseV1') %}
                $('#helpEditPhraseModal').trigger('click');
            {% endif %}

        });
    </script>
{% endblock %}
