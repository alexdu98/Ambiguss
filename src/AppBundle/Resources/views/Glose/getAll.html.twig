{% extends 'base.html.twig' %}

{% block title %}Gloses{% endblock %}

{% block css %}
    <link rel="stylesheet" href="{{ asset('vendor/DataTables/datatables.css') }}">
{% endblock %}

{% block titre %}Modération des gloses{% endblock %}

{% block contenu %}
    <div class="well">
        <table id="glosesTable" class="display responsive no-wrap table table-striped table-bordered" cellspacing="0" width="100%">
            <thead>
            <tr>
                <th>ID</th>
                <th>Valeur</th>
                <th>Auteur</th>
                <th>Date de création</th>
                <th>Modificateur</th>
                <th>Date de modification</th>
                <th>Visible</th>
                <th>Signalée</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tfoot>
            <tr>
                <th>ID</th>
                <th>Valeur</th>
                <th>Auteur</th>
                <th>Date de création</th>
                <th>Modificateur</th>
                <th>Date de modification</th>
                <th>Visible</th>
                <th>Signalée</th>
                <th>Actions</th>
            </tr>
            </tfoot>
            <tbody>
            {% for glose in gloses %}
                <tr id="glose-{{ glose.id }}" {% if glose.signale %}class="text-danger"{% endif %}>
                    <td>{{ glose.id }}</td>
                    <td class="glose-valeur">{{ glose.valeur }}</td>
                    <td><a href="{{ path('fos_user_profile_show' , {'id':glose.auteur.id}) }}">{{ glose.auteur.username }}</a></td>
                    <td data-order="{{ glose.dateCreation|date("U") + glose.dateCreation|date("Z") }}">{{ glose.dateCreation|date("d/m/Y H:i") }}</td>

                    {% if glose.Modificateur %}
                        <td class="glose-modificateur"><a href="{{ path('fos_user_profile_show' , {'id':glose.modificateur.id}) }}">{{ glose.modificateur.username|default('') }}</a>
                        </td>
                    {% else %}
                        <td class="glose-modificateur"><a href="#">{{ glose.modificateur.username|default('') }}</a></td>
                    {% endif %}
                    <td class="glose-dateModification" data-order="{{ glose.dateModification is empty ? "" : glose.dateModification|date("U") + glose.dateModification|date("Z") }}">
                        {{ glose.dateModification is empty ? "" : glose.dateModification|date("d/m/Y H:i") }}
                    </td>

                    <td class="glose-visible">{% if glose.visible %}Oui{% else %}Non{% endif %}</td>
                    <td class="glose-signale">{% if glose.signale %}Oui <span class="badge">!</span>{% else %}Non{% endif %}</td>
                    <td class="text-center">
                        <button class="btn btn-warning btn-sm editGloseButton" data-toggle="modal" data-target="#modal" data-id="{{ glose.id }}" data-valeur="{{ glose.valeur }}">
                            Modifier
                        </button>
                    </td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
{% endblock %}

{% block js %}
    <script src="{{ asset('vendor/DataTables/datatables.js') }}"></script>
    <script>
        $(document).ready(function () {
            $('#glosesTable').DataTable({
                stateSave: true, // Enregistre les configurations
                stateSaveParams: function (settings, data) {
                    data.start = 0; // On enregistre pas la page
                    data.order = [[7, "desc"]]; // On ordonne sur l'id
                    data.search = {}; // On enregistre pas la recherche
                },
                stateDuration: 0, // pour une durée illimitée
                columnDefs: [
                    {targets: 8, orderable: false}
                ],
                order: [[7, 'desc']], // On ordonne sur l'id
                responsive: true,
                language: {url: '{{ asset('vendor/DataTables/datatables.french.lang') }}'}
            });

            // Au click sur le bouton, exécute la fonction
            $('.editGloseButton').click(editGloseModal);

            function editGloseModal(event) {
                var button = $(this);
                setModalSize('modal-lg');
                setModalTitle('Modifier la glose "<b class="color-red">' + button.data('valeur') + '</b>"');
                setModalBody('{{ include('AppBundle:Glose:edit.html.twig', {'form': editGloseForm})|e('js') }}');

                $("#toggleJugements").click(function () {
                    $("#jugements").toggle("slow");
                });

                var ligne = button.closest('tr');
                var signale = ligne.find('.glose-signale').html().includes('Oui');
                var visible = ligne.find('.glose-visible').html().includes('Oui');

                $('[name="glose_edit[signale]"][value="' + (signale ? 1 : 0) + '"]').prop('checked', true);
                $('[name="glose_edit[visible]"][value="' + (visible ? 1 : 0) + '"]').prop('checked', true);

                // Récupère les jugements en cours
                $.post(Routing.generate('modo_jugements_glose_show', {id: button.data('id')}), function (data) {
                    if (data.succes) {
                        divJugement = $('#jugements');
                        if (data.jugements.length === 0)
                            divJugement.append('<span class="text-danger">Aucun jugement en cours</span>');
                        html = '{{ include('@App/Jugement/jugement.html.twig')|e('js') }}';
                        $.each(data.jugements, function (index) {
                            clone = $(html);
                            clone.find('.panel-heading').append(data.jugements[index].categorieJugement);
                            clone.find('.panel-body').append(data.jugements[index].description);
                            var profil = Routing.generate('fos_user_profile_show', {id: data.jugements[index].auteur_id});
                            var dt = new Date(data.jugements[index].dateCreation * 1000);
                            var date = dt.getDate() + '/' + (dt.getMonth() + 1) + '/' + dt.getFullYear() + ' à ' + dt.getHours() + ':' + dt
                                .getMinutes();
                            clone.find('.lien-profil').attr('href', profil);
                            clone.find('.lien-profil').append(data.jugements[index].auteur);
                            clone.find('.date-creation').append(date);

                            // Ajout de l'eventlistener valide
                            clone.find('.signalement').click(function (event) {
                                event.preventDefault();

                                // On affiche l'image laoding en attendant la réponse
                                $(this).after('<img src="' + urlImageLoading + '" id="loading">');

                                $.post(Routing.generate('modo_jugement_edit', {id: data.jugements[index].id}),
                                    {
                                        verdict: $(this).data('verdict'),
                                        token: '{{ csrf_token('jugement_vote') }}'
                                    }
                                    , function
                                        (data) {
                                        if (data.succes) {
                                            $(event.target).closest('.panel').remove();
                                        }
                                        else {
                                            $(event.target).closest('.panel').append('<span class="text-danger">Erreur (' + data.message + ')</span>')
                                        }
                                    })
                                    .fail(function () {
                                        $(this).after('<span class="text-danger">Erreur</span>');
                                    })
                                    .always(function () {
                                        $('#loading').remove();
                                    });
                            });

                            divJugement.append(clone);
                        });
                    }
                    else {

                    }
                }, "json");

                $('#glose_edit_valeur').val(button.data('valeur'));
                var form = $('form[name="glose_edit"]');
                var action = form.attr('action');
                form.attr('action', action.replace('0', button.data('id')));

                form.ajaxForm({
                    beforeSubmit: function (arr, form, opt) {
                        // On affiche l'image laoding en attendant la réponse
                        $(form).after('<img src="' + urlImageLoading + '" id="loading">');
                    },
                    // Quand la réponse Ajax sera reçu, on appelle ce callback
                    success: function (data, status, xhr, form) {
                        // On supprime l'image loading
                        $(form).next().remove();
                        if (data.succes) {
                            var lienProfilModificateur = Routing.generate('fos_user_profile_show', {id: data.glose.modificateurID});
                            if (data.glose.id == button.data('id')) {
                                // On trouve la ligne
                                var row = button.closest('tr');

                                if (data.glose.signale === "0") {
                                    row.removeClass('text-danger');
                                }
                                else {
                                    row.addClass('text-danger');
                                }

                                // On met à jour la ligne
                                row.find('.glose-valeur').html(data.glose.valeur);
                                row.find('.glose-modificateur').html('<a href="' + lienProfilModificateur + '">' + data.glose.modificateur + '</a>');
                                row.find('.glose-dateModification').html(data.glose.dateModification);
                                row.find('.glose-dateModification').attr('data-order', data.glose.dateModificationTS);
                                button.data('valeur', data.glose.valeur);
                                var signale = data.glose.signale === "0" ? 'Non' : 'Oui <span class="badge">!</span>';
                                row.find('.glose-signale').html(signale);
                                var visible = data.glose.visible === "0" ? 'Non' : 'Oui';
                                row.find('.glose-visible').html(visible);

                                // On trouve la ligne, on l'a met à jour
                                $('#glosesTable').DataTable().row('#glose-' + button.data('id')).invalidate().draw();

                                // On cache la modale
                                $('#modal').modal('hide');
                            }
                            else {
                                // On trouve la ligne et on l'a supprime
                                $('#glosesTable').DataTable().row(button.closest('tr')).remove().draw();
                                $(form).after('<div class="alert alert-info">La glose existait déjà (id : ' + data.glose.id + '), les réponses et ' +
                                    'les liaisons avec les mots ambigus ont donc étaient fusionnées.</div>');

                                var newLigne = $('#glose-' + data.glose.id);
                                newLigne.find('.glose-modificateur').html('<a href="' + lienProfilModificateur + '">' + data.glose.modificateur + '</a>');
                                newLigne.find('.glose-dateModification').html(data.glose.dateModification);
                                newLigne.find('.glose-dateModification').attr('data-order', data.glose.dateModificationTS);

                                // On trouve la ligne, on l'a met à jour
                                $('#glosesTable').DataTable().row('#glose-' + data.glose.id).invalidate().draw();
                            }
                        }
                        else {
                            $('.form-error').empty().append('<span class="text-danger">Erreur (' + data.message + ')</span>');
                        }
                    },
                    error: function () {
                        $("#loading").remove();
                        $('.form-error').empty().append('<span class="text-danger">Erreur</span>');
                    }
                });
            }
        });
    </script>
{% endblock %}
