{% extends 'base.html.twig' %}

{% block title %}Jeu{% endblock %}
{% block titre %}<h1 class="tlt" data-in-effect="rollIn">Jouons </h1>{% endblock %}
{% block meta %}
	<meta property="og:url" content="{{ url('ambiguss_game', {id: phrase_id}) }}"/>
	<meta property="og:type" content="website"/>
	<meta property="og:title" content="Ambiguss, le jeu de désambiguïsation lexicale."/>
	<meta property="og:description" content="'{{ phrasePur }}'. Choisissez le sens qui vous semble le plus approprié et comparez-vous aux autres
	joueurs."/>
	<meta property="og:image" content="{{ absolute_url(asset('images/avocat256.png')) }}"/>

	<link rel="canonical" href="{{ url('ambiguss_game', {id: phrase_id}) }}">
{% endblock %}

{% block contenu %}
	<div class="row">
		<div class="col-xs-12 col-sm-12 col-md-8 col-md-offset-2 bulle">
			{% if app.user is null %}
				<p class="text-success">
					<b>
						<a href="{{ path('fos_user_security_login') }}" class="size18">Connectez-vous</a>
						pour enregistrer vos parties et avoir accès à toutes les fonctionnalités !
					</b>
				</p>
			{% endif %}

			{% if auteur == app.user %}
				<p class="text-warning size16">Vous êtes l'auteur cette phrase, vous ne gagnerez donc pas de points.</p>
			{% elseif alreadyPlayed and app.user %}
				<p class="text-warning size16">Vous avez déjà joué cette phrase, vous ne gagnerez donc pas de points.</p>
			{% endif %}

			{% for flashMessage in app.session.flashbag.get('succes') %}
				<div class="alert alert-success">{{ flashMessage }}</div>
			{% endfor %}
			{% for flashMessage in app.session.flashbag.get('erreur') %}
				<div class="alert alert-danger">{{ flashMessage }}</div>
			{% endfor %}
			<h3 id="result"></h3>
			<div class="form-group">
				{% if app.user %}
					<button id="phraseLike" class="btn btn-{% if liked %}primary{% else %}default{% endif %} btn-xs">
						<i class="fa fa-thumbs-up" aria-hidden="true"></i>
						J'aime cette phrase
					</button>
				{% endif %}
				<div class="fb-share-button" data-href="{{ url('ambiguss_game', {id: phrase_id}) }}" data-layout="button" data-size="small" data-mobile-iframe="true">
					<a class="fb-xfbml-parse-ignore" target="_blank" href="https://www.facebook.com/sharer/sharer.php?u={{ url('ambiguss_game', {id: phrase_id})|url_encode }};src=sdkpreparse">Partager</a>
				</div>
				<a class="twitter-share-button" href="https://twitter.com/intent/tweet?text='{{ phrasePur }}'. Ambigu non %3F&hashtags=Ambiguss">Partager</a>
				{% if app.user %}
					<button id="phraseSignal" class="btn btn-danger btn-xs" data-toggle="modall" data-target="#modal">
						<i class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></i>
						Signaler un élément
					</button>
				{% endif %}
			</div>
			<br>
			{{ form_start(form, {'attr' : {'class' : 'form-horizontal'}}) }}

			{{ form_errors(form) }}
			<div class="form-group">
				<div id="AppBundle_game_reponses" data-prototype="
	                {{ include('AppBundle:Game:reponse.prot.html.twig', {form: form.reponses.vars.prototype})|e
				('html_attr') }}
	                "></div>
				{% do form.reponses.setRendered %}
			</div>
			<br>
			<div class="form-group">
				{{ form_widget(form.valider) }}
				<a href="{{ path('ambiguss_game') }}" class="btn btn-default">Passer cette
					phrase</a>
			</div>
			{{ form_rest(form) }}
			{{ form_end(form) }}
		</div>
	</div>
	<button type="button" class="pull-right infobulle" data-toggle="modal" data-target="#modal" id="helpGameModal">
		<img src="{{ asset('images/infobulle.png') }}">
	</button>
{% endblock %}
{% block js %}
	<div id="fb-root"></div>
	<script>
		(function (d, s, id) {
			var js, fjs = d.getElementsByTagName(s)[0];
			if (d.getElementById(id)) return;
			js = d.createElement(s);
			js.id = id;
			js.src = "//connect.facebook.net/fr_FR/sdk.js#xfbml=1&version=v2.9&appId=1793610560900722";
			fjs.parentNode.insertBefore(js, fjs);
		}(document, 'script', 'facebook-jssdk'));
	</script>
	<script>
		window.twttr = (function (d, s, id) {
			var js, fjs = d.getElementsByTagName(s)[0],
				t = window.twttr || {};
			if (d.getElementById(id)) return t;
			js = d.createElement(s);
			js.id = id;
			js.src = "https://platform.twitter.com/widgets.js";
			fjs.parentNode.insertBefore(js, fjs);

			t._e = [];
			t.ready = function (f) {
				t._e.push(f);
			};

			return t;
		}(document, "script", "twitter-wjs"));
	</script>
	<script>
		$(document).ready(function () {
			var endBaliseAmbiguEscape = '<\/amb>';

			// Regex pour avoir les contenus des balises <amb> et leurs id
			// Exemple : L'<amb id="1">avocat</amb> mange des <amb id="2">avocats</amb>.
			// Donne : $1 = 1 et $2 = avocat, puis $1 = 2 et $2 = avocats
			var reg2 = new RegExp('<amb id=\"([0-9]+)\">(.*?)' + endBaliseAmbiguEscape, 'g');

			$("#result").append("{{ phraseHTMLEscape|raw }}");

			// Div où Symfony a mis le formulaire (voir cours sur les formulaires imbriqués)
			var $container = $('div#AppBundle_game_reponses');

			var motsAmbigus = $.parseJSON('{{ motsAmbigus | raw }}');

			var index = 1;


			for (ma in motsAmbigus) {
				addReponse($container, motsAmbigus[ma]);
			}

			// Ajoute le formulaire d'un mot ambigu (voir cours sur les formulaires imbriqués)
			function addReponse($container, motAmbiguPhrase) {
				// On ajoute le nom unique et l'id
				var template = $container.attr('data-prototype')
					.replace(/__name__label__/g, '')
					.replace(/__name__/g, index)
					.replace(/__motAmbigu__/g, motAmbiguPhrase[0].trim())
					.replace(/__ordre__/g, motAmbiguPhrase[2])
					.replace(/__id__/g, index);
				var $prototype = $(template);
				// Trouve la balise qui à la class amb
				var idMotAmbiguPhrase = $prototype.find('.idMotAmbiguPhrase');
				idMotAmbiguPhrase.val(motAmbiguPhrase[1]);
				addAddGloseButton($prototype, motAmbiguPhrase[0], addGloseButtonIsClicked);
				getGloses($prototype.find('select.gloses'), motAmbiguPhrase[0]);
				$container.append($prototype);
				index++;
			}

			function addGloseButtonIsClicked(event) {
				setModalTitle('Ajouter une glose à "' + event.data.motAmbigu + '"');
				{% if app.user is empty %}
				messageNeedConnectionModal();
				{% else %}
				nbGloses = $(event.target).closest('.reponseGroupe').find('select.gloses option').length - 1;
				if (nbGloses >= 2)
					cost = '{{ costCreateGloseByGlosesOfMotAmbigu }}' * nbGloses;
				else
					cost = 0;
				setModalBody('<div class="text-danger">Cela vous coûtera <b data-cost="{{ costCreateGloseByGlosesOfMotAmbigu }}" class="costNewGlose">' + cost + '</b> crédit(s).</div><br>');
				if ($('#credits').html() > cost) {
					setModalBody('{{ include('AppBundle:Glose:add.html.twig', {'form': addGloseForm})|e('js') }}');
					addGloseModal(event);
				}
				{% endif %}
			}

			$("#phraseLike").click(function () {
				var boutonLike = $(this);
				$.getJSON('{{ path('ambiguss_phrase_like', {'id':phrase_id}) }}', function (data) {
					if (data.status === 'succes') {
						if (data.action === 'like' || data.action === 'relike') {
							boutonLike.removeClass('btn-default').addClass('btn-primary');
						} else {
							boutonLike.removeClass('btn-primary').addClass('btn-default');
						}
					}
				});
			});

			// Signalement
			$("#phraseSignal").click(function () {
				var boutonSignal = $(this);
				setModalSize('modal-lg');
				setModalTitle("Signaler un élément de la phrase \"{{ phraseHTMLEscape|raw }}\"");
				setModalBody('{{ include('AppBundle:Signalement:add.html.twig', {'form': addJugementForm})|e('js') }}');
				$("#modal").modal("show");

				// MAJ type objet signalement
				$("#jugement_add_typeObjet").on('change', function () {
					var idTypeObjet = $(this).val();
					var typeObjet = $(this).find('[value="' + idTypeObjet + '"]').html();
					if (typeObjet === 'Glose') {
						$('#signalementIdObjet').show();
						$('#jugement_add_signaler').prop('disabled', false);
						$('#jugement_add_idObjet').empty().append('<option selected disabled>Choisissez une glose</option>').prop('disabled', false);
						$('.gloses').each(function () {
							var ma = $(this).next().val();
							var opts = $(this).clone();
							opts.find('option').eq(0).remove();
							$('#jugement_add_idObjet').append('<optgroup label="' + ma + '">' + opts.html() + '</optgroup>')
						})
					}
					else if (typeObjet === 'Phrase') {
						$('#signalementIdObjet').hide();
						$('#jugement_add_signaler').prop('disabled', false);
						$('#jugement_add_idObjet').empty().append('<option selected value="{{ phrase_id }}">{{ phrase_id }}</option>');
					}
					else {
						$('#signalementIdObjet').show();
						$('#jugement_add_signaler').prop('disabled', true);
					}
				});
				$("#jugement_add_typeObjet").trigger('change');


				// On envoit le formulaire par ajax
				$('form[name="jugement_add"]').ajaxForm({
					beforeSubmit: function (arr, form, opt) {
						// On affiche l'image laoding en attendant la réponse
						$(form).after('<img src="' + urlImageLoading + '" id="loading">');
					},
					// Quand la réponse Ajax sera reçu, on appelle ce callback
					success: function (data, status, xhr, form) {
						// On supprime l'image loading
						$(form).next().remove();
						if (data.succes) {
							$(form).after(
								'<div class="alert alert-success alert-dismissible fade in" role="alert">'
								+ '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>'
								+ 'Élément signalé</div>'
							);
						}
						else {
							$(form).after('<div class="alert alert-danger">Erreur</div>');
						}
					},
					error: function () {
						loading = $("#loading");
						next = loading.prev().nextAll();
						loading.before('<span class="text-danger">Erreur</span>');
						next.remove();
					}
				});
			});

			// Au survol d'une réponse on surligne le MA
			$('.reponseGroupe').hover(function () {
				var ordre = $(this).attr('id').replace(/rep/g, '');
				$(this).css('background', 'rgba(160, 210, 51, 0.6)');
				$('#result').find('b#ma' + ordre).css('background', 'rgba(160, 210, 51, 0.6)');
			}, function () {
				var ordre = $(this).attr('id').replace(/rep/g, '');
				$(this).css('background', 'none');
				$('#result').find('b#ma' + ordre).css('background', 'none');
			});

			// Au survol d'un MA on surligne la réponse
			$('.ma').hover(function () {
				var ordre = $(this).attr('id').replace(/ma/g, '');
				$(this).css('background', 'rgba(160, 210, 51, 0.6)');
				$('#rep' + ordre).css('background', 'rgba(160, 210, 51, 0.6)');
			}, function () {
				var ordre = $(this).attr('id').replace(/ma/g, '');
				$(this).css('background', 'none');
				$('#rep' + ordre).css('background', 'none');
			});

			// Au click sur le bouton, exécute la fonction
			$('#helpGameModal').click(helpGameModal);
			function helpGameModal(event) {
				// Place le cookie pendant 30 jours
				$.cookie('helpGameV1', 'true', {expires: 30});
				setModalSize('modal-lg');
				setModalTitle('Informations sur le jeu');
				setModalBody('{{ include('@App/InfosModal/game.html.twig')|e('js') }}');
			}

			// Affiche automatiquement la modal si le visiteur n'a pas le cookie comme quoi il a déjà vu les infos
			{% if not app.request.cookies.has('helpGameV1') %}
			$('#helpGameModal').trigger('click');
			{% endif %}
		});
		$('.tlt').textillate({ in: { effect: 'rollIn' } });
	</script>
{% endblock %}
